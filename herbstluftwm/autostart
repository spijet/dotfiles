#!/bin/bash

# '##::::'##:'##:::::::'##:::::'##:'##::::'##:
#  ##:::: ##: ##::::::: ##:'##: ##: ###::'###:
#  ##:::: ##: ##::::::: ##: ##: ##: ####'####:
#  #########: ##::::::: ##: ##: ##: ## ### ##:
#  ##.... ##: ##::::::: ##: ##: ##: ##. #: ##:
#  ##:::: ##: ##::::::: ##: ##: ##: ##:.:: ##:
#  ##:::: ##: ########:. ###. ###:: ##:::: ##:
# ..:::::..::........:::...::...:::..:::::..::

# Add up all commands into a chain.
hc() {
    [ -z "${cmds}" ] && cmds="chain .-. ${@}" || cmds="${cmds} .-. ${@}"
}

hc emit_hook reload

# Set HLWM configs dir
CFGDIR="${HOME}/.config/herbstluftwm"

# Load platform options if they exist:
[ -f "${HOME}/.zsh/options/platform.sh" ] && source "${HOME}/.zsh/options/platform.sh"

if [[ ${PEKO} = "laptop" ]]
then
    #
    # Set screen refresh rate.
    xrandr -r 48
    #
    # Set Intel backlight PWM rate to ~500Hz.
    # See helper code for details.
    ${CFGDIR}/helpers/pwmfreq fix &
    #
    # Add user-fonts to XFLD.
    xset +fp /home/spijet/.fonts
    #
    # Also, Tewi. I love Tewi.
    xset +fp /usr/share/fonts/tewi-font
    #
    # Rehash fontdirs.
    xset fp rehash
fi

if which nitrogen >/dev/null 2>&1; then
	nitrogen --restore
else
	~/.fehbg &
fi

# New hlwm function that allows making cleaner version of run_once.
if herbstclient silent new_attr bool my_not_first_autostart ; then
    compton &
    kbdd &
    /usr/libexec/deja-dup/deja-dup-monitor &
    ${CFGDIR}/helpers/xkbmon &
    pgrep conky > /dev/null || ${CFGDIR}/helpers/hc-conky &
fi



# remove all existing keybindings
hc keyunbind --all

# keybindings
Mod=Mod4   # Use the super key as the main modifier

# Basic keybinds
# WM Control
hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-c close

# Terminal
# I use Tewi terminal as main one on my work computer.
if [[ ${PEKO} = "workstation" ]]
then
    hc keybind $Mod-Return spawn termite -c ~/.config/termite/config.tewi
    hc keybind $Mod-Shift-Return spawn termite
else
    hc keybind $Mod-Return spawn urxvtc
    hc keybind $Mod-Shift-Return spawn urxvtc -fn 'xft:Tewi:pixelsize=11' -fb 'xft:Tewi:pixelsize=11'
fi

# Media keys
hc keybind XF86AudioLowerVolume spawn $CFGDIR/volume.sh down
hc keybind XF86AudioRaiseVolume spawn $CFGDIR/volume.sh up
hc keybind XF86AudioMute spawn $CFGDIR/volume.sh mute
hc keybind XF86MonBrightnessDown spawn $CFGDIR/light.sh down
hc keybind XF86MonBrightnessUp spawn $CFGDIR/light.sh up
# Rofi keys
hc keybind $Mod-r spawn rofi -show run
hc keybind $Mod-Tab spawn rofi -show window
hc keybind $Mod-e spawn rofi -show ssh

# basic movement
# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# moving clients
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames
resizestep=0.05
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# tags
tag_alias=(        )
tag_names=( mail web im term files docs misc )
tag_keys=( {1..9} 0 )

# Remove default tag (merge into first)
hc rename default mail

# Populate tags
for i in ${!tag_names[@]} ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-d remove
hc keybind $Mod-space cycle_layout 1
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-p pseudotile toggle

# layout saving
SAVESTATE="${CFGDIR}/layouts"
hc keybind $Mod-Shift-s spawn ${CFGDIR}/savestate.sh "${SAVESTATE}"


# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#222222'
hc set frame_border_normal_color '#101010'
hc set frame_bg_normal_color '#565656'
hc set frame_bg_active_color '#345F0C'
hc set frame_border_width 1
hc set always_show_frame 1
hc set frame_bg_transparent 1
hc set frame_transparent_width 5
hc set frame_gap 6

hc attr theme.active.color '#9fbc00'
hc attr theme.normal.color '#454545'
hc attr theme.urgent.color orange
hc attr theme.inner_width 1
hc attr theme.inner_color black
hc attr theme.border_width 3
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#3E4A00'
hc attr theme.active.outer_color '#3E4A00'
hc attr theme.background_color '#141414'

hc set window_gap 0
hc set frame_padding 0
hc set smart_window_surroundings 0
hc set smart_frame_surroundings 1
hc set mouse_recenter_gap 0
hc set focus_follows_mouse 1

# rules
hc unrule -F
hc rule class=Firefox tag=web # Firefox belongs to 'web' tag.
hc rule focus=on # normally focus new clients
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' pseudotile=on focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

# unlock, just to be sure
hc unlock

herbstclient set tree_style '╾│ ├└╼─┐'

# do multi monitor setup here:
hc detect_monitors

# Send the commandchain to hlwm in one command,
# because we're fast!
herbstclient $cmds&

# Find the panel:
# the panel is universal as for now, WiFi stuff is managed by Conky
panel=$CFGDIR/panel.sh

[[ -f "${SAVESTATE}" ]] && ${CFGDIR}/loadstate.sh "${SAVESTATE}"

[[ -x "$panel" ]] || panel=/etc/xdg/herbstluftwm/panel.sh
for monitor in $(herbstclient list_monitors | cut -d: -f1) ; do
    # start it on each monitor
    "$panel" $monitor &
    [[ ${PEKO} = "laptop" ]] && $CFGDIR/deferredtray.sh &
done
